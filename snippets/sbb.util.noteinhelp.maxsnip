{
	"patcher" : 	{
		"boxes" : [ 			{
				"box" : 				{
					"maxclass" : "comment",
					"prototypename" : "rnbo-bubble",
					"text" : "Gate (0 or 1)",
					"numinlets" : 1,
					"style" : "rnbo-bubble",
					"patching_rect" : [ 184.5, 102.0, 97.000000000000057, 25.0 ],
					"bubble" : 1,
					"numoutlets" : 0,
					"bubblepoint" : 0.55,
					"bubbleusescolors" : 1,
					"id" : "obj-8"
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "comment",
					"text" : "Capture (latch onto) velocity when non-zero and then scale velocity to (0.0 - 1.0)",
					"linecount" : 3,
					"numinlets" : 1,
					"style" : "rnbo-bubble",
					"patching_rect" : [ 159.5, 142.0, 182.0, 54.0 ],
					"bubble" : 1,
					"numoutlets" : 0,
					"bubblepoint" : 0.55,
					"bubbleusescolors" : 1,
					"id" : "obj-7"
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : ">~ 0",
					"numinlets" : 2,
					"patching_rect" : [ 146.5, 102.0, 32.0, 23.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "signal" ],
					"id" : "obj-2",
					"rnboinfo" : 					{
						"parseOp" : 1,
						"argnames" : 						{
							"in2" : 							{
								"attrOrProp" : 1,
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"label" : "in2"
							}

						}
,
						"inputs" : [ 							{
								"name" : "in1",
								"type" : "auto",
								"hot" : 1
							}
, 							{
								"name" : "in2",
								"type" : "auto",
								"hot" : 1
							}
 ],
						"outputs" : [ 							{
								"name" : "out1",
								"type" : "signal"
							}
 ],
						"classname" : "expr~",
						"expressive" : 1,
						"finalize" : 0,
						"digest" : "greater than operator",
						"helpname" : "gt~",
						"aliasOf" : "gt~"
					}
,
					"rnbo_uniqueid" : "expr~_obj-2",
					"rnbo_serial" : 2
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "/~ 127",
					"numinlets" : 2,
					"patching_rect" : [ 71.0, 178.0, 45.0, 23.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "signal" ],
					"id" : "obj-15",
					"rnboinfo" : 					{
						"parseOp" : 1,
						"argnames" : 						{
							"divisor" : 							{
								"attrOrProp" : 1,
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"label" : "divisor"
							}

						}
,
						"inputs" : [ 							{
								"name" : "in1",
								"type" : "auto",
								"hot" : 1,
								"displayName" : "dividend"
							}
, 							{
								"name" : "in2",
								"type" : "auto",
								"hot" : 1,
								"displayName" : "divisor"
							}
 ],
						"outputs" : [ 							{
								"name" : "out1",
								"type" : "signal",
								"displayName" : "result"
							}
 ],
						"classname" : "expr~",
						"expressive" : 1,
						"finalize" : 0,
						"digest" : "divide inputs",
						"helpname" : "div~",
						"aliasOf" : "div~"
					}
,
					"rnbo_uniqueid" : "expr~_obj-15",
					"rnbo_serial" : 3
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "sig~",
					"numinlets" : 2,
					"patching_rect" : [ 71.0, 62.0, 30.0, 23.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "signal" ],
					"id" : "obj-13",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 1,
						"argnames" : 						{
							"value" : 							{
								"attrOrProp" : 1,
								"digest" : "incoming numbers to convert",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"impulse" : 							{
								"attrOrProp" : 1,
								"digest" : "generate a signal of 1 for specified time (ms or samples)",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"out" : 							{
								"attrOrProp" : 1,
								"digest" : "signal output",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 0,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "signal"
							}
,
							"unit" : 							{
								"attrOrProp" : 2,
								"digest" : "Unit for impulse length.",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"enum" : [ "ms", "samples" ],
								"type" : "enum",
								"defaultValue" : "ms"
							}

						}
,
						"inputs" : [ 							{
								"name" : "value",
								"type" : "number",
								"digest" : "incoming numbers to convert",
								"defaultarg" : 1,
								"hot" : 1,
								"docked" : 1
							}
, 							{
								"name" : "impulse",
								"type" : "number",
								"digest" : "generate a signal of 1 for specified time (ms or samples)",
								"hot" : 1,
								"docked" : 1
							}
 ],
						"outputs" : [ 							{
								"name" : "out",
								"type" : "signal",
								"digest" : "signal output",
								"docked" : 0
							}
 ],
						"helpname" : "sig~",
						"aliasOf" : "sig~",
						"classname" : "ip",
						"expressive" : 0,
						"operator" : 0,
						"versionId" : 738436674,
						"changesPatcherIO" : 0
					}
,
					"rnbo_extra_attributes" : 					{
						"unit" : "ms"
					}
,
					"rnbo_uniqueid" : "ip_obj-13",
					"rnbo_serial" : 1
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "latch~",
					"numinlets" : 2,
					"patching_rect" : [ 71.0, 148.0, 41.0, 23.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "signal" ],
					"id" : "obj-11",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 0,
						"argnames" : 						{
							"out1" : 							{
								"attrOrProp" : 1,
								"digest" : "out1",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "signal"
							}
,
							"x" : 							{
								"attrOrProp" : 1,
								"digest" : "x",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number"
							}
,
							"control" : 							{
								"attrOrProp" : 1,
								"digest" : "control",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"reset" : 							{
								"attrOrProp" : 1,
								"digest" : "reset",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 1,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "bang",
								"defaultValue" : "0"
							}

						}
,
						"inputs" : [ 							{
								"name" : "x",
								"type" : "auto",
								"digest" : "x",
								"displayName" : "x",
								"hot" : 1,
								"docked" : 0
							}
, 							{
								"name" : "control",
								"type" : "auto",
								"digest" : "control",
								"displayName" : "control",
								"defaultarg" : 1,
								"docked" : 0
							}
 ],
						"outputs" : [ 							{
								"name" : "out1",
								"type" : "signal",
								"digest" : "out1",
								"docked" : 0
							}
 ],
						"helpname" : "latch~",
						"classname" : "latch~",
						"digest" : "Conditionally pass or hold input",
						"expressive" : 0,
						"changesPatcherIO" : 0
					}
,
					"rnbo_uniqueid" : "latch~_obj-11",
					"rnbo_serial" : 1
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "sig~",
					"numinlets" : 2,
					"patching_rect" : [ 10.0, 97.0, 30.0, 23.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "signal" ],
					"id" : "obj-10",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 1,
						"argnames" : 						{
							"value" : 							{
								"attrOrProp" : 1,
								"digest" : "incoming numbers to convert",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"impulse" : 							{
								"attrOrProp" : 1,
								"digest" : "generate a signal of 1 for specified time (ms or samples)",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"out" : 							{
								"attrOrProp" : 1,
								"digest" : "signal output",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 0,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "signal"
							}
,
							"unit" : 							{
								"attrOrProp" : 2,
								"digest" : "Unit for impulse length.",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"enum" : [ "ms", "samples" ],
								"type" : "enum",
								"defaultValue" : "ms"
							}

						}
,
						"inputs" : [ 							{
								"name" : "value",
								"type" : "number",
								"digest" : "incoming numbers to convert",
								"defaultarg" : 1,
								"hot" : 1,
								"docked" : 1
							}
, 							{
								"name" : "impulse",
								"type" : "number",
								"digest" : "generate a signal of 1 for specified time (ms or samples)",
								"hot" : 1,
								"docked" : 1
							}
 ],
						"outputs" : [ 							{
								"name" : "out",
								"type" : "signal",
								"digest" : "signal output",
								"docked" : 0
							}
 ],
						"helpname" : "sig~",
						"aliasOf" : "sig~",
						"classname" : "ip",
						"expressive" : 0,
						"operator" : 0,
						"versionId" : 738436674,
						"changesPatcherIO" : 0
					}
,
					"rnbo_extra_attributes" : 					{
						"unit" : "ms"
					}
,
					"rnbo_uniqueid" : "ip_obj-10",
					"rnbo_serial" : 2
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "mtof",
					"numinlets" : 2,
					"patching_rect" : [ 10.0, 62.0, 33.0, 23.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"id" : "obj-9",
					"rnboinfo" : 					{
						"parseOp" : 1,
						"argnames" : 						{
							"tuning" : 							{
								"attrOrProp" : 1,
								"digest" : "Tuning in Hz",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"label" : "tuning"
							}
,
							"hires" : 							{
								"attrOrProp" : 2,
								"digest" : "High Resolution",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "number",
								"defaultValue" : "1"
							}
,
							"hot" : 							{
								"type" : 1,
								"digest" : "All inlets trigger calculation."
							}

						}
,
						"inputs" : [ 							{
								"name" : "in1",
								"type" : "number",
								"hot" : 1,
								"displayName" : "midivalue",
								"digest" : "Midi value to convert"
							}
, 							{
								"name" : "in2",
								"type" : "number",
								"hot" : 0,
								"displayName" : "tuning",
								"digest" : "Tuning in Hz"
							}
 ],
						"outputs" : [ 							{
								"name" : "out1",
								"type" : "number",
								"displayName" : "frequency",
								"digest" : "Converted Frequency"
							}
 ],
						"classname" : "expr",
						"expressive" : 1,
						"finalize" : 0,
						"digest" : "convert MIDI note to frequency",
						"helpname" : "mtof"
					}
,
					"rnbo_extra_attributes" : 					{
						"hires" : 1.0
					}
,
					"rnbo_uniqueid" : "expr_obj-9",
					"rnbo_serial" : 1
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "notein",
					"numinlets" : 2,
					"patching_rect" : [ 10.0, 10.0, 50.5, 23.0 ],
					"numoutlets" : 4,
					"outlettype" : [ "", "", "", "" ],
					"id" : "obj-1",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 0,
						"argnames" : 						{
							"notenumber" : 							{
								"attrOrProp" : 1,
								"digest" : "note number (0-127)",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"velocity" : 							{
								"attrOrProp" : 1,
								"digest" : "velocity (0-127)",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"releasevelocity" : 							{
								"attrOrProp" : 1,
								"digest" : "release velocity (0-127)",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"outchannel" : 							{
								"attrOrProp" : 1,
								"digest" : "MIDI channel (1-16)",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 0,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"input" : 							{
								"attrOrProp" : 1,
								"digest" : "MIDI Input",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"channel" : 							{
								"attrOrProp" : 1,
								"digest" : "MIDI channel (1-16) to output (-1 for all)",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"inlet" : 1,
								"type" : "number",
								"defaultValue" : "0"
							}

						}
,
						"inputs" : [ 							{
								"name" : "input",
								"type" : "number",
								"digest" : "MIDI Input",
								"hot" : 1,
								"docked" : 0
							}
, 							{
								"name" : "channel",
								"type" : "number",
								"digest" : "MIDI channel (1-16) to output (-1 for all)",
								"defaultarg" : 1,
								"docked" : 0
							}
 ],
						"outputs" : [ 							{
								"name" : "notenumber",
								"type" : "number",
								"digest" : "note number (0-127)",
								"docked" : 0
							}
, 							{
								"name" : "velocity",
								"type" : "number",
								"digest" : "velocity (0-127)",
								"docked" : 0
							}
, 							{
								"name" : "releasevelocity",
								"type" : "number",
								"digest" : "release velocity (0-127)",
								"docked" : 0
							}
, 							{
								"name" : "outchannel",
								"type" : "number",
								"digest" : "MIDI channel (1-16)",
								"docked" : 0
							}
 ],
						"helpname" : "notein",
						"classname" : "notein",
						"digest" : "MIDI note input",
						"versionId" : 0,
						"expressive" : 0,
						"changesPatcherIO" : 1
					}
,
					"rnbo_uniqueid" : "notein_obj-1",
					"rnbo_serial" : 1
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"source" : [ "obj-9", 0 ],
					"destination" : [ "obj-10", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-2", 0 ],
					"destination" : [ "obj-11", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-13", 0 ],
					"destination" : [ "obj-2", 0 ],
					"order" : 0
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-13", 0 ],
					"destination" : [ "obj-11", 0 ],
					"order" : 1
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-11", 0 ],
					"destination" : [ "obj-15", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-1", 0 ],
					"destination" : [ "obj-9", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-1", 1 ],
					"destination" : [ "obj-13", 0 ]
				}

			}
 ],
		"appversion" : 		{
			"major" : 8,
			"minor" : 2,
			"revision" : 0,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "rnbo",
		"description" : "331 x 191, containing 9 objects",
		"tags" : "audio, rnbo",
		"snippetinfo" : 		{
			"name" : "util.noteinhelp",
			"type" : "rnbo",
			"objects" : "comment, >~, /~, latch~, sig~, mtof, notein",
			"tags" : "audio, rnbo",
			"description" : "331 x 191, containing 9 objects",
			"image" : ""
		}

	}

}
